id: overlay_compute_jaccard
subclass_of: overlay
name: overlay compute jaccard
description: This operation computes the Jaccard similarity that measures how many `intermediate_node_key`'s are shared in common between each `start_node_key` and `object_node_key`. And it will then create virtual edges and add edge attributes (with the property name `jaccard_index`) between each `start_node_key` and `object_node_key`. This is used for purposes such as "find me all drugs (`start_node_key`) that have many proteins (`intermediate_node_key`) in common with this disease (`end_node_key`)." This can be used for downstream filtering to concentrate on relevant bioentities.
examples: 
  - input: ""
    output: ""
    parameters:

input_requirements: []
output_guarantees: []
allowed_changes:
  - add qedges
  - add bindings to results

parameters:
  type: object
  properties:
    start_node_key:
      description: A curie id specifying the starting node
      type: string
      example: `DOID:1872`, `CHEBI:7476`, and `UMLS:C1764836`
    intermediate_node_key:
      description: A curie id specifying the intermediate node
      type: string
      example: `DOID:1872`, `CHEBI:7476`, and `UMLS:C1764836`
    end_node_key:
      description: A curie id specifying the ending node
      type: string
      example: `DOID:1872`, `CHEBI:7476`, and `UMLS:C1764836`
    virtual_relation_label:
      description: An optional label to help identify the virtual edge in the relation field.
      type: string
      example: `N1`, `J2`, and `FET`
  required:
    - start_node_key
    - intermediate_node_key
    - end_node_key
    - virtual_relation_label

